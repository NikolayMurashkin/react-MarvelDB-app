{"version":3,"file":"static/js/856.eee7f9eb.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMessage/ErrorMessage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/pages/MainPage/randomChar/RandomChar.jsx","components/pages/MainPage/charListItem/CharListItem.jsx","components/pages/MainPage/charList/CharList.jsx","components/pages/MainPage/skeleton/Skeleton.jsx","components/pages/MainPage/charInfo/CharInfo.jsx","components/pages/MainPage/MainPage.jsx","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import React, {Component} from 'react';\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({error: true});\n        console.log(error);\n        console.log(errorInfo)\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img className='error' src={img} alt=\"Error\" style={{ objectFit: 'contain', width: '250px', heigth: '250px', margin: '0 auto', display: 'block' }} />\n\t)\n}\n\nexport default ErrorMessage;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import React from 'react';\nexport default React.createContext(null);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import {useEffect, useState} from 'react';\nimport Spinner from '../../../spinner/Spinner';\nimport ErrorMessage from '../../../errorMessage/ErrorMessage';\nimport useMarvelService from '../../../../services/MarvelService';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\n\nimport './randomChar.scss';\nimport mjolnir from '../../../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState(null);\n\n    const {error, loading, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.round(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id).then(onCharLoaded);\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(error || loading || !char) ? <View char={char}/> : null;\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, homepage, wiki, thumbnail} = char;\n    const imgStyle = thumbnail.includes('image_not_available')\n    || thumbnail.includes('4c002e0305708')\n        ? {objectFit: 'fill'}\n        : {objectFit: 'cover'};\n    return (\n\n        <div className=\"randomchar__block\">\n            <TransitionGroup component={null} appear={true}>\n                <CSSTransition\n                    timeout={500}\n                    classNames=\"randomchar__img\"\n                >\n                    <img\n                        src={thumbnail}\n                        alt={name}\n                        className=\"randomchar__img\"\n                        style={imgStyle}\n                    />\n                </CSSTransition>\n            </TransitionGroup>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import classNames from \"classnames\";\n\nconst CharListItem = (props) => {\n\n    const onFocus = (e) => {\n        props.onFocus(e)\n        props.onCharSelected(props.id);\n    }\n\n    const {img, name} = props;\n    const imgStyle = img.includes('image_not_available') || img.includes('4c002e0305708') ? {objectFit: 'fill'} : {objectFit: 'cover'};\n\n    return (\n        <li key={props.id}\n            tabIndex={0}\n            onFocus={(e) => onFocus(e)}\n            className={classNames(\"char__item\")}>\n            <img src={img} alt={name}\n                 style={imgStyle}/>\n            <div className=\"char__name\">{name}</div>\n        </li>\n    );\n}\n\nexport default CharListItem;","import './charList.scss';\nimport {useState, useEffect, useRef} from 'react';\nimport useMarvelService from '../../../../services/MarvelService';\nimport CharListItem from '../charListItem/CharListItem';\nimport ErrorMessage from \"../../../errorMessage/ErrorMessage\";\nimport Spinner from \"../../../spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nconst CharList = (props) => {\n    const [characters, setCharacters] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(520);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {error, clearError, loading, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onLoadMore()\n    }, []);\n\n    const onCharListLoaded = (newChars) => {\n        let ended = false;\n        if (newChars.length < 9) {\n            ended = true;\n        }\n\n        setCharacters(characters => [...characters, ...newChars]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n    }\n\n    const onLoadMore = (offset) => {\n        clearError();\n        setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const content = <View chars={characters} onCharSelected={props.onCharSelected}/>;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button\n                disabled={newItemLoading}\n                onClick={() => onLoadMore(offset)}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\">\n                <div className=\"inner\">{newItemLoading ? 'data is loading' : 'load more'}</div>\n            </button>\n        </div>\n    )\n}\n\nconst View = (props) => {\n    const itemRef = useRef(null);\n\n    const onFocusChar = (e) => {\n        if (itemRef.current) {\n            itemRef.current.classList.remove('char__item_selected')\n        }\n\n        const target = e.target.closest('.char__item');\n\n        itemRef.current = target;\n        itemRef.current.classList.add('char__item_selected');\n    }\n\n    const {chars, onCharSelected} = props;\n\n    return (\n        <TransitionGroup component={'ul'} appear={true} className=\"char__grid\">\n            {chars.map((char, i) => {\n                return (\n                    <CSSTransition timeout={0} classNames=\"charListItem\">\n                        <CharListItem\n                            onFocus={onFocusChar}\n                            onCharSelected={onCharSelected}\n                            id={char.id}\n                            key={i}\n                            name={char.name}\n                            img={char.thumbnail}/>\n                    </CSSTransition>\n                )\n            })}\n        </TransitionGroup>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport useMarvelService from \"../../../../services/MarvelService\";\nimport {useState, useEffect} from \"react\";\nimport ErrorMessage from \"../../../errorMessage/ErrorMessage\";\nimport Spinner from \"../../../spinner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nconst CharInfo = (props) => {\n    const [selectedChar, setSelectedChar] = useState(0);\n\n    const {error, clearError, loading, getCharacter} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId]);\n\n    const onCharLoaded = (char) => {\n        setSelectedChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const charId = props.charId;\n        if (!charId) {\n            return\n        }\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const skeleton = selectedChar || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && selectedChar ? <Spinner/> : null;\n    const content = !(error || loading || !selectedChar) ? <View char={selectedChar}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, homepage, wiki, thumbnail, comics} = char;\n\n\n    const imgStyle = char.thumbnail.includes('image_not_available') || char.thumbnail.includes('4c002e0305708')\n        ? {objectFit: 'fill'}\n        : {objectFit: 'cover'};\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <h3 className=\"char__comics\">Comics:</h3>\n            <TransitionGroup component={'ul'} appear={true} className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"There is no comics with this character\"}\n                {comics.map((item, i) => {\n                    const comicId = item.resourceURI.replace(/\\D/g, \"\").slice(1);\n                    // eslint-disable-next-line\n                    if (i > 9) return;\n                    return <CSSTransition timeout={0} classNames=\"char__comics-item\">\n                        <li key={i} className=\"char__comics-item\">\n                            <Link to={`/comics/${comicId}`}>{item.name}</Link>\n                        </li>\n                    </CSSTransition>\n                })}\n            </TransitionGroup>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number.isRequired\n}\n\nexport default CharInfo;","import RandomChar from \"./randomChar/RandomChar\";\nimport CharList from \"./charList/CharList\";\nimport {useState} from \"react\";\nimport ErrorBoundary from \"../../errorBoundary/ErrorBoundary\";\nimport CharInfo from \"./charInfo/CharInfo\";\nimport decoration from \"../../../resources/img/vision.png\";\n\nconst MainPage = () => {\n    const [selectedItem, setItem] = useState(0);\n\n    const onItemSelected = (itemId) => {\n        setItem(itemId);\n    }\n\n    return (\n        <div>\n            <>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                <div className=\"char\">\n                    <ErrorBoundary>\n                        <CharList onCharSelected={onItemSelected}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedItem}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\"\n                     src={decoration}\n                     alt=\"vision\"/>\n            </>\n        </div>\n    );\n};\n\nexport default MainPage;\n","import {useHttp} from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=9348dbb59adab6792791d34da902e88b';\n    const _limit = 9;\n    const _baseOffset = 1200;\n\n    const {error, loading, request, clearError} = useHttp();\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=${_limit}&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=23000&${_apiKey}`);\n        return res.data.results.map(_transformComics)\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformComics = (comics) => {\n        const thumbnail = `${comics.thumbnail.path}.${comics.thumbnail.extension}`;\n        const description = (str) => str ? str : 'The description for this comic was destroyed by Tanos';\n        return {\n            id: comics.id,\n            title: comics.title,\n            price: comics.prices[0].price ? `$${comics.prices[0].price}` : 'not available',\n            description: description(comics.description),\n            pages: comics.pageCount ? `${comics.pageCount} pages` : 'No information about the number of pages',\n            language: 'en-us',\n            thumbnail\n        }\n    }\n\n    const _transformCharacter = (char) => {\n        const description = (str, num) => {\n            if (str) {\n                if (str.length > 150) {\n                    return str.slice(0, num) + '...';\n                }\n                return str;\n            } else return 'The description for this character was destroyed by Tanos';\n        }\n        return {\n            comics: char.comics.items,\n            id: char.id,\n            name: char.name,\n            description: description(char.description, 150),\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`\n        }\n    }\n\n    return {error, loading, getCharacter, getAllCharacters, clearError, getAllComics, getComic};\n}\n\nexport default useMarvelService;","import {useCallback, useState} from \"react\";\n\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${request.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch (e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, error, request, clearError}\n}"],"names":["ErrorBoundary","state","error","errorInfo","this","setState","console","log","props","children","Component","className","src","img","alt","style","objectFit","width","heigth","margin","display","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_inheritsLoose","subClass","superClass","prototype","create","constructor","setPrototypeOf","React","getChildMapping","mapFn","result","Children","c","forEach","child","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","map","k","TransitionGroup","_React$Component","context","_this","handleExited","call","_assertThisInitialized","contextValue","isMounting","firstRender","_proto","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","TransitionGroupContext","Provider","value","propTypes","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","forceReflow","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","initialStatus","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","cancelNextCallback","getTimeouts","timeout","undefined","mounting","nodeRef","current","ReactDOM","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","childProps","noop","contextType","removeClass","classes","split","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","arguments","args","Array","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","hasClass","_addClass","_this$appliedClasses$","base","done","View","char","name","description","homepage","wiki","thumbnail","imgStyle","includes","href","useState","setChar","useMarvelService","loading","getCharacter","clearError","useEffect","updateChar","id","Math","round","random","then","onCharLoaded","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","tabIndex","onFocus","e","onCharSelected","itemRef","useRef","onFocusChar","closest","chars","characters","setCharacters","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onLoadMore","onCharListLoaded","newChars","ended","disabled","comics","item","comicId","resourceURI","slice","to","selectedChar","setSelectedChar","charId","skeleton","selectedItem","setItem","itemId","decoration","_apiBase","_apiKey","_baseOffset","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","json","data","message","useHttp","res","results","_transformCharacter","getAllComics","_transformComics","getComic","str","path","extension","title","price","prices","pages","pageCount","language","num","items","urls"],"sourceRoot":""}